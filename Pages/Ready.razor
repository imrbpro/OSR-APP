@page "/ready/{dealNo?}/{dealNoTo?}/{dealDate?}/{dealDateTo?}/{valueDate?}/{valueDateTo?}/{brCode?}/{ccy?}/{portfolio?}/{trader?}/{customer?}/{ps?}/{orderBy:int?}"
@using MudBlazor
@using OSR_APP.Services.Interface
@using Newtonsoft.Json;
@inject IReadyService readyService
<div class="col-sm-12 table-container-styled">
    <style>
        .mud-table-cell-custom-group {
            font-weight: 500;
        }

        .mud-table-cell-custom-group-footer {
            padding-bottom: 50px;
            text-align: Left;
        }

        .table-container-styled {
            table-layout: fixed;
            display: table;
        }

        .table-styled {
            text-wrap: nowrap !important;
            word-break: break-word;
        }
    </style>

    <div class="align-content-sm-around p-4">
        <h3>Ready</h3>
        <hr />
        @if (IsLoading)
        {
            <center>
                <div class="loader"></div>
            </center>
        }
        else
        {
            <MudTable Class="table-styled" Hover="true" Breakpoint="Breakpoint.Sm"
                      Items="@readyData"
                      GroupBy="@_groupDefinition"
                      GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
                      GroupFooterClass=""
                      Dense="true"
                      Filter="new Func<OSR_APP.Models.Ready,bool>(FilterFunc)">

                <ToolBarContent>
                    <MudTextField @bind-Value="searchString" Placeholder="Search... " Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" Style="width:250px !important"></MudTextField>
                </ToolBarContent>
                <ColGroup>
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                    <col />
                </ColGroup>
                <HeaderContent>
                    <MudTh>Deal No</MudTh>
                    <MudTh>Deal Date</MudTh>
                    <MudTh>Branch Code</MudTh>
                    <MudTh>Branch Name</MudTh>
                    <MudTh>PS</MudTh>
                    <MudTh>SN</MudTh>
                    <MudTh>Cover Rate</MudTh>
                    <MudTh>Cust Rate</MudTh>
                    <MudTh>CCY</MudTh>
                    <MudTh>Amount</MudTh>
                    <MudTh>Equivalent PKR</MudTh>
                    <MudTh>Revenue</MudTh>
                    <MudTh>Spread</MudTh>
                    <MudTh>Dealer</MudTh>
                    <MudTh>Contact Person</MudTh>
                    <MudTh>Segment</MudTh>
                    <MudTh>CTRCCY</MudTh>
                    <MudTh>Deal Notes</MudTh>
                </HeaderContent>
                <GroupHeaderTemplate>
                    <MudTh Class="mud-table-cell-custom-group" colspan="18">@($"{context.GroupName}: {context.Key}")</MudTh>
                </GroupHeaderTemplate>
                <RowTemplate>
                    <MudTd>@context.DealNo</MudTd>
                    <MudTd>@context.DealDate.ToString("dd/MM/yyyy")</MudTd>
                    <MudTd>@context.BrCode</MudTd>
                    <MudTd>@context.BrName</MudTd>
                    <MudTd>@context.PS</MudTd>
                    <MudTd>@context.SN</MudTd>
                    <MudTd>@context.CoverRate</MudTd>
                    <MudTd>@context.CustRate</MudTd>
                    <MudTd>@context.CCY</MudTd>
                    <MudTd>@context.Amount</MudTd>
                    <MudTd>@context.EquivalentPKR</MudTd>
                    <MudTd>@context.Revenue</MudTd>
                    <MudTd>@context.Spread</MudTd>
                    <MudTd>@context.Dealer</MudTd>
                    <MudTd>@context.ContactPerson</MudTd>
                    <MudTd>@context.Segment</MudTd>
                    <MudTd>@context.CTRCCY</MudTd>
                    <MudTd>@context.DealNotes</MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100, int.MaxValue }" />
                </PagerContent>
                <GroupFooterTemplate>
                    <MudTh Class="mud-table-cell-custom-group mud-table-cell-custom-group-footer" colspan="28">TOTAL ( Equivalent PKR: @context.Items.Sum((e) => Convert.ToDecimal(e.EquivalentPKR)) | Revenue: @context.Items.Sum((e) => Convert.ToDecimal(e.Revenue)) | Amount: @context.Items.Sum((e) => Convert.ToDecimal(e.Amount)) | Equivalent USD: 10,000 @* @context.Items.Sum((e) => Convert.ToDecimal(e.)) *@ | USD Spread: @context.Items.Sum((e) => Convert.ToDecimal(e.Spread)) ) </MudTh>
                </GroupFooterTemplate>
            </MudTable>
        }
    </div>
</div>
@code {

    [Parameter] public string? DealNo { get; set; } = "";
    [Parameter] public string? DealNoTo { get; set; } = "";
    [Parameter] public string? DealDate { get; set; } = "";
    [Parameter] public string? DealDateTo { get; set; } = "";
    [Parameter] public string? ValueDate { get; set; } = "";
    [Parameter] public string? ValueDateTo { get; set; } = "";
    [Parameter] public string? BrCode { get; set; } = "";
    [Parameter] public string? Ccy { get; set; } = "";
    [Parameter] public string? PortFolio { get; set; } = "";
    [Parameter] public string? Trader { get; set; } = "";
    [Parameter] public string? Customer { get; set; } = "";
    [Parameter] public string? Ps { get; set; } = "";
    [Parameter] public int? OrderBy { get; set; } = 0;

    private IEnumerable<OSR_APP.Models.Ready> readyData;
    Dictionary<string, string> dictionary = new Dictionary<string, string>();
    private string searchString = "";
    private bool IsLoading = false;
    protected override async Task OnInitializedAsync()
    {
        IsLoading = true;
        var response = await readyService.GetReadyData(
            DealNo,
            DealNoTo,
            DealDate,
            DealDateTo,
            ValueDate,
            ValueDateTo,
            BrCode,
            Ccy,
            PortFolio,
            Trader,
            Customer,
            Ps,
            OrderBy

        );
        readyData = response["readyData"];
        IsLoading = false;
    }

    private TableGroupDefinition<OSR_APP.Models.Ready> _groupDefinition = new()
        {
            GroupName = "Segment",
            Indentation = false,
            Expandable = true,
            IsInitiallyExpanded = true,
            Selector = (e) => e.Segment
        };

    private bool FilterFunc(Models.Ready ready)
    {
        if (string.IsNullOrWhiteSpace(searchString))
        {
            IsLoading = false;
            return true;
        }
        if (ready.DealNo.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            IsLoading = false;
            return true;
        }
        if (ready.BrName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            IsLoading = false;
            return true;
        }
        if (ready.Segment.Contains(searchString, StringComparison.OrdinalIgnoreCase))
        {
            IsLoading = false;
            return true;
        }
        IsLoading = false;
        return false;
    }
}
