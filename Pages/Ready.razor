@page "/ready"
@using MudBlazor
@using OSR_APP.Services.Interface
@using Newtonsoft.Json;
@inject IReadyService readyService
<div class="col-sm-12">
    <MudTable Items="@readyData" Dense="true" Hover="true" FixedHeader="true" Filter="new Func<Models.Ready,bool>(FilterReady)">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Ready Data</MudText>
            <MudSpacer />
            <MudTextField T="string" Placeholder="Search" Adornment="Adornment.Start"
                          AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Deal No</MudTh>
            <MudTh>Deal Date</MudTh>
            <MudTh>Branch Code</MudTh>
            <MudTh>Branch Name</MudTh>
            <MudTh>PS</MudTh>
            <MudTh>SN</MudTh>
            <MudTh>Cover Rate</MudTh>
            <MudTh>Cust Rate</MudTh>
            <MudTh>CCY</MudTh>
            <MudTh>Amount</MudTh>
            <MudTh>Equivalent PKR</MudTh>
            <MudTh>Revenue</MudTh>
            <MudTh>Spread</MudTh>
            <MudTh>Dealer</MudTh>
            <MudTh>Contact Person</MudTh>
            <MudTh>Segment</MudTh>
            <MudTh>CTRCCY</MudTh>
            <MudTh>Deal Notes</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd>@context.DealNo</MudTd>
            <MudTd>@context.DealDate.ToString("dd/MM/yyyy")</MudTd>
            <MudTd>@context.BrCode</MudTd>
            <MudTd>@context.BrName</MudTd>
            <MudTd>@context.PS</MudTd>
            <MudTd>@context.SN</MudTd>
            <MudTd>@context.CoverRate</MudTd>
            <MudTd>@context.CustRate</MudTd>
            <MudTd>@context.CCY</MudTd>
            <MudTd>@context.Amount</MudTd>
            <MudTd>@context.EquivalentPKR</MudTd>
            <MudTd>@context.Revenue</MudTd>
            <MudTd>@context.Spread</MudTd>
            <MudTd>@context.Dealer</MudTd>
            <MudTd>@context.ContactPerson</MudTd>
            <MudTd>@context.Segment</MudTd>
            <MudTd>@context.CTRCCY</MudTd>
            <MudTd>@context.DealNotes</MudTd>
        </RowTemplate>
        <NoRecordsContent>
            <MudText>No matching records found</MudText>
        </NoRecordsContent>
        <LoadingContent>
            <MudText>Loading...</MudText>
        </LoadingContent>

        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
</div>
@code {
    private IEnumerable<OSR_APP.Models.Ready> readyData;
    Dictionary<string, string> dictionary = new Dictionary<string, string>();
    private string searchString = "";

    protected override async Task OnInitializedAsync()
    {
        var response = await readyService.GetReadyData();
        readyData = response["readyData"];
    }
    private void OnSearch(string text)
    {
        readyData = readyData.Where(r =>
          r.DealNo.ToString().Contains(text) ||
          r.BrCode.Contains(text, StringComparison.OrdinalIgnoreCase) ||
          r.BrName.Contains(text, StringComparison.OrdinalIgnoreCase)
        );
    }

    private bool FilterReady(Models.Ready element) => FilterFunc(element, searchString);

    private bool FilterFunc(Models.Ready ready, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (ready.DealNo.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (ready.BrName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}
