@page "/Forward"
@using MudBlazor
@using OSR_APP.Services.Interface
@using Newtonsoft.Json;
@inject IForwardService forwardService

<div class="col-sm-12 table-container-styled">
    <style>
        .mud-table-cell-custom-group {
            font-weight: 500;
        }

        .mud-table-cell-custom-group-footer {
            padding-bottom: 50px;
            text-align: left;
        }

        .table-container-styled {
            table-layout: fixed;
            display: table;
        }

        .table-styled {
            text-wrap: nowrap !important;
            word-break: break-word;
        }
    </style>

    <MudTable Class="table-styled" Hover="true" Breakpoint="Breakpoint.Sm"
              Items="@forwardData"
              GroupBy="@_groupDefinition"
              GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
              GroupFooterClass=""
              Dense="true">
        <ColGroup>
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
        </ColGroup>
        <HeaderContent>
            <MudTh>DEALNO</MudTh>
            <MudTh>DEALDATE</MudTh>
            <MudTh>ODATE</MudTh>
            <MudTh>VDATE</MudTh>
            <MudTh>Days</MudTh>
            <MudTh>TotalPremium</MudTh>
            <MudTh>BRCODE</MudTh>
            <MudTh>BRNAME</MudTh>
            <MudTh>COVERRATE</MudTh>
            <MudTh>CUSTRATE</MudTh>
            <MudTh>PS</MudTh>
            <MudTh>CCY</MudTh>
            <MudTh>PORT</MudTh>
            <MudTh>AMOUNT</MudTh>
            <MudTh>EQPKR</MudTh>
            <MudTh>CNO</MudTh>
            <MudTh>SN</MudTh>
            <MudTh>DEALTEXT</MudTh>
            <MudTh>SPOTRATE</MudTh>
            <MudTh>CTRCCY</MudTh>
            <MudTh>CTRAMT</MudTh>
            <MudTh>TRAD</MudTh>
            <MudTh>CORPSPREADAMT</MudTh>
            <MudTh>DealNotes</MudTh>
            <MudTh>USDEq</MudTh>
            <MudTh>EqPakRs</MudTh>
            <MudTh>exprofit</MudTh>
        </HeaderContent>
        <GroupHeaderTemplate>
            <MudTh Class="mud-table-cell-custom-group" colspan="27">@($"{context.GroupName}: {context.Key}")</MudTh>
        </GroupHeaderTemplate><RowTemplate>
            <MudTd>@context.DEALNO</MudTd>
            <MudTd>@context.DEALDATE?.ToString("dd/MM/yyyy")</MudTd>
            <MudTd>@context.ODATE?.ToString("dd/MM/yyyy")</MudTd>
            <MudTd>@context.VDATE?.ToString("dd/MM/yyyy")</MudTd>
            <MudTd>@context.Days</MudTd>
            <MudTd>@context.TotalPremium</MudTd>
            <MudTd>@context.BRCODE</MudTd>
            <MudTd>@context.BRNAME</MudTd>
            <MudTd>@context.COVERRATE</MudTd>
            <MudTd>@context.CUSTRATE</MudTd>
            <MudTd>@context.PS</MudTd>
            <MudTd>@context.CCY</MudTd>
            <MudTd>@context.PORT</MudTd>
            <MudTd>@context.AMOUNT</MudTd>
            <MudTd>@context.EQPKR</MudTd>
            <MudTd>@context.CNO</MudTd>
            <MudTd>@context.SN</MudTd>
            <MudTd>@context.DEALTEXT</MudTd>
            <MudTd>@context.SPOTRATE</MudTd>
            <MudTd>@context.CTRCCY</MudTd>
            <MudTd>@context.CTRAMT</MudTd>
            <MudTd>@context.TRAD</MudTd>
            <MudTd>@context.CORPSPREADAMT</MudTd>
            <MudTd>@context.DealNotes</MudTd>
            <MudTd>@context.USDEq</MudTd>
            <MudTd>@context.EqPakRs</MudTd>
            <MudTd>@context.exprofit</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100, int.MaxValue }" />
        </PagerContent>
        <GroupFooterTemplate>
            <MudTh Class="mud-table-cell-custom-group mud-table-cell-custom-group-footer" colspan="27">TOTAL( Ex-Profit: @context.Items.Sum((e) => Convert.ToDecimal(e.exprofit)) | Amount: @context.Items.Sum((e) => Convert.ToDecimal(e.AMOUNT)) | Equivalent Pakistani Rupees: @context.Items.Sum((e) => Convert.ToDecimal(e.EQPKR)) )</MudTh>
        </GroupFooterTemplate>
    </MudTable>
</div>
@code {
    private IEnumerable<OSR_APP.Models.Forward> forwardData;
    Dictionary<string, string> dictionary = new Dictionary<string, string>();
    private string searchString = "";

    protected override async Task OnInitializedAsync()
    {
        var response = await forwardService.GetForwardData();
        forwardData = response["forwardData"];
    }
    private TableGroupDefinition<OSR_APP.Models.Forward> _groupDefinition = new()
        {
            GroupName = "Portfolio",
            Indentation = false,
            Expandable = true,
            IsInitiallyExpanded = true,
            Selector = (e) => e.PORT
        };
    private void OnSearch(string text)
    {
        forwardData = forwardData.Where(r =>
          r.DEALNO.ToString().Contains(text) ||
          r.BRCODE.Contains(text, StringComparison.OrdinalIgnoreCase) ||
          r.BRNAME.Contains(text, StringComparison.OrdinalIgnoreCase)
        );
    }

    private bool FilterReady(Models.Forward element) => FilterFunc(element, searchString);

    private bool FilterFunc(Models.Forward forward, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (forward.DEALNO.ToString().Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (forward.BRNAME.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}
